import{Marker as e,Icon as t,LatLng as o,Util as s}from"leaflet";export class SVGMarker extends e{initialize(e,t){this.name=SVGMarker,s.setOptions(this,t),this.options.icon=new h(t),this._latlng=new o(e)}}const r='\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 41" class="leaflet-zoom-animated leaflet-interactive leaflet-SVGIcon" style="width:25px">\n  <g>\n    <path d="M12.4 0C5.6 0-.02 5.76-.02 12.7-.02 15.12.4501 17.28 1.6 19.2L12.4 38.4 23.2 19.2C24.4 17.38 24.9 15.12 24.88 12.72 24.88 5.8 19.2 0 12.4 0z" />\n    <circle class="markerDot" cx="12.5" cy="12.5" r="5"/>\n  </g>\n</svg>\n',l={square:"M21.44 0H3.66C1.70 0 0.10 1.87 0.10 4.18V24.03 C0.10 26.33 1.70 28.2 3.66 28.2H8.11L12.54 41L17 28.2H21.45C23.41 28.2 25 26.33 25 24.02V4.18C25 1.87 23.41 0 21.45 0Z",penta:"M0 14.0124 6.2456 0h12.492L24.8 14 12.4912 40.991z"};let n;const i={default:"M27.3 3.7C22.5-1.1 14.4-1 9.5 3.9 7.8 5.6 6.6 7.5 6.1 9.6L.1 30.8 21.3 24.9C23.5 24.5 25.4 23.2 27.1 21.5 32 16.6 32.1 8.5 27.3 3.7z"},a={},c={iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],tooltipAnchor:[16,-28],shadowSize:[41,41]};class p{static svgExport(e=null){return null}static svgCreateShadow(e,t){console.log(`Creating shadow for ${e}`),a[e]=void 0;const o=i[e];let s=t.cloneNode(!0);s.setAttribute("viewBox","0 0 31 31"),s.style.width=31,s.querySelector("circle").remove();s.querySelector("path").setAttribute("d",o),s.classList.add("SVGMarkerShadow"),a[e]=s}static serializeSVG(e){return(new XMLSerializer).serializeToString(e)}static svgToDataURL(e){e instanceof SVGSVGElement&&(e=p.serializeSVG(e));return`data:image/svg+xml;base64,${btoa(e)}`}static svgDeserialize(e,t=!0){let o=null;try{const t=(new DOMParser).parseFromString(e,"image/svg+xml"),s=t.querySelector("parsererror");if(s)return console.log("DOMParser error:",JSON.stringify(s)),o;o=t.documentElement}catch(t){console.warn(`svgDeserialize: ${t.name} ${t.message}`),console.warn("You might want to pass TrustedHTML"),o=p.kludge_svgDeserializer(e)}if(t){let e=Array.from(o.childNodes);for(let t of e)t.nodeType==Node.TEXT_NODE&&o.removeChild(t)}return o}static kludge_svgDeserializer(e){let t=[];const o=/((?<key>\w+)\s*=\s*(?<value>(['"])[^'"]*?\4))/g,s=/\/\s*>/;let r=e.matchAll(/<\s*(?<tagclose>[\/])?\s*(?<tag>\/?\w+)\s*(?<attribs>[^>]*)?>/g);const l=Array.from(r);for(const e of l){const{tagclose:r,tag:l,attribs:n}=e.groups;let i={};if(n?.length){let e=n.matchAll(o);const t=Array.from(e);for(const e of t){const{key:t,value:o}=e.groups;i[t.replace('"',"")]=o.slice(1,-1)}}let a=p.svgMaker(l,i);e[0].match(s)||r?(t.at(-1).appendChild(a),t.length>1&&t.pop()):t.push(a)}return t.pop()}static svgMaker(e,t){if(e.startsWith("/"))return null;const o=document.createElementNS("http://www.w3.org/2000/svg",e);for(const e in t)o.setAttribute(e,t[e]);return o}}class h extends t{_createSVGIcon(e){let t=n.cloneNode(!0),o=["glyphColor","glyphPrefix","imageOpts","keyboard","title","alt","zIndexOffset","opacity","raisoOnHover","pane","shadowPane","bubblingPointerEvents","autoPanOnFocus"];for(const[s,r]of Object.entries(e))if(!o.includes(s))if("shape"==s)if(r in l){t.querySelector("path").setAttribute("d",l[r])}else console.warn(`unknown shape: ${r}`);else if("color"==s)if(CSS.supports("color",r))for(const e of t.children)e.setAttribute("fill",r),e.setAttribute("stroke",r);else console.warn(`color ${r} not supported`);else if("class"==s)for(let e of r.split(/\s+/))t.classList.add(e);else if("fill"==s)CSS.supports("color",r)&&(t.querySelector("path").style.fill=r);else if("stroke"==s)for(const e of t.children)e.setAttribute("stroke",r);else if("dotColor"==s)if(CSS.supports("color",r)){let e=t.querySelector(".markerDot");e&&(e.style.fill=r)}else console.warn(`color ${r} not supported`);else if("dotRadius"==s)t.querySelector(".markerDot")?.setAttribute("r",r);else if("image"==s){let o=r;if("string"==typeof o&&o.trim().match(/^<svg.*>/)&&(o=p.svgToDataURL(o)),o.match(/^[\.\/]/)){let e=document.createElement("a");e.setAttribute("href",o),o=e.href}if(!URL.canParse(o)){console.warn("Bad image option %o",r);continue}let s=e.imageOpts||{};s.href=o,s.width||(s.width=15),s.height||(s.height=15),s.width&&!s.x&&(s.x=(25-s.width)/2),s.height&&!s.y&&(s.y=(25-s.height)/2);let l=p.svgMaker("image",s);t.appendChild(l),l=t.querySelector(".markerDot"),l&&l.setAttribute("r",0)}else if("glyph"==s||"number"==s){let o=document.createElement("span");if("glyph"==s){const t=e.glyphPrefix||r.split("-")[0];o.className=`${t} ${r}`}else o.textContent=r;o.classList.add("SVGIconGlyph");const l=e.glyphColor||"white";CSS.supports("color",l)?o.style.color=l:(console.warn(`Bad glyphColor ${e.glyphCOlor}`),o.style.color="white");let n=p.svgMaker("foreignObject",{x:0,y:0});n.style.height=`${this.options.iconSize[1]}px`,n.style.width=`${this.options.iconSize[0]}px`,n.appendChild(o),t.appendChild(n),t.querySelector(".markerDot")?.setAttribute("r",0)}else if("style"==s){const e=p.svgMaker("style");e.append(r),t.prepend(e)}else for(const e of t.children)e.style[s]=r;return t}createIcon(){const e=this._options||{};let t;t=Object.keys(e).length?this._createSVGIcon(e):n.cloneNode(!0);const o=this.options.iconAnchor;return t.style.marginLeft=-o[0]+"px",t.style.marginTop=-o[1]+"px",t}createShadow(e){console.log("createShadow args = ",e);const t=this.options.shape||"default";return a[t].cloneNode(!0)}initialize(e){n||(n=p.svgDeserialize(r)),this.name=h,this._options=e,this.options={...c,...e}}}export{SVGMarker as default,h as SVGIcon,p as SVGMarkerUtil};!function(){const e=new CSSStyleSheet;e.replaceSync("\n.leaflet-SVGIcon {\n  fill: #267fca;\n  stroke: blue;\n  width: 25px;\n  height: 41px;\n  /* filter: drop-shadow(5px -5px 5px rgba(0, 0, 0, 0.6)); */\n}\n.leaflet-SVGIcon .markerDot {\n  fill:white;\n}\nspan.SVGIconGlyph {\n  width: 25px;\n  text-align: center;\n  vertical-align: middle;\n  position: relative;\n  display: inline-block;\n}\nsvg.SVGMarkerShadow {\n  opacity: 0.5;\n  filter: blur(3.5px);\n  top: -41px; \n}\n.SVGMarkerShadow path {\n  stroke: #666;\n  fill: #666;\n}\n"),document.adoptedStyleSheets.push(e)}(),n=p.svgDeserialize(r,!0),function(){const e=n.cloneNode(!0);p.svgCreateShadow("default",e);for(const[t,o]of Object.entries(l))e.querySelector("path").setAttribute("d",o),p.svgCreateShadow(t,e)}();